{"version":3,"sources":["components/ErrorFile.js","NavBar.js","components/BookmarkedArticles.js","components/postsg.js","components/Home.js","components/SearchResults.js","components/DetailedArticle.js","App.js","serviceWorker.js","index.js"],"names":["ErrorFile","style","margin","Component","NavBar","props","state","source","bookmark","query","suggestions_array","trial","searchQuery","trigger","defaultValue","localStorage","setItem","url","this","suggestions","fetch","headers","response","json","data","_type","suggestionGroups","searchSuggestions","map","result","toggleShow","removeItem","article","id","getItem","JSON","stringify","event","setState","history","push","prev_prop","prev_state","hide_status","current_location","location","pathname","includes","Navbar","className","variant","expand","width","loadOptions","bingAutosuggest","bind","onInputChange","inputValue","noOptionsMessage","onChange","option","value","label","Toggle","aria-controls","Collapse","Nav","Link","as","NavLink","to","color","onClick","handleBookmark","stopPropagation","title","placement","arrow","Form","Check","size","type","defaultChecked","toggled_src","field","split","slice","withRouter","BookmarkedArticle","delete","shows","showd","chosenArticle","click","message","shareArticle","post","favs","parse","web_url","webUrl","webTitle","headline","main","then","loading","content","docs","catch","error","console","log","section","multimedia","i","length","empty","Col","xl","Card","e","preventDefault","detailedArticle","Header","Title","fontStyle","handleShow","handleDeletion","Img","src","blocks","elements","assets","file","Text","Row","paddingTop","xs","sm","fontSize","webPublicationDate","padding","backgroundColor","sectionColor","sectionId","toUpperCase","fontColor","fontWeight","paddingLeft","paddingRight","borderRadius","largestImage","pub_date","section_name","empty_msg","openBookmarks","arr","Object","keys","forEach","key","textAlign","msg","abstract","Container","position","fluid","Toast","top","zIndex","onClose","show","delay","autohide","renderAppropriately","Modal","onHide","handleClose","dialogClassName","closeButton","Body","ModalTitle","FacebookShareButton","FacebookIcon","round","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","Posts","posts","marginTop","Spinner","animation","body","bodyTextSummary","sectionName","border","alt","published_date","Home","match","params","results","Math","min","previous_props","previous_state","old_source","old_field","SearchResults","searchResG","searchResN","nyposts","guardian_results","nytimes_results","share","DetailedArticle","uri","replace","commentBox","createBoxUrl","boxId","pageLocation","page","sendToBookmark","resizeCard","ContainerClassName","TransitionClassName","postion","App","path","component","exact","BookmarkedArticles","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a662b31.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ErrorFile extends Component{\r\n    render()\r\n    {\r\n        return (            \r\n            <h1 style={{margin:\"10%\"}}>page you requested does not exist</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorFile;","import React, {Component} from 'react';\r\nimport { NavLink, withRouter} from 'react-router-dom';\r\nimport { Nav, Navbar, Form} from 'react-bootstrap';\r\nimport { Bookmark, BookmarkFill } from 'react-bootstrap-icons';\r\nimport  './navbar.css';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n//const value=\" \"\r\nclass NavBar extends Component\r\n    {                          \r\n            constructor(props) {\r\n                super(props);\r\n                this.state = {\r\n                  source:\"guardian\",                  \r\n                  bookmark: false,  \r\n                  query : \"\",\r\n                  suggestions_array : [],\r\n                  trial : true,\r\n                  searchQuery : \"\",\r\n                  trigger: false,   \r\n                  defaultValue: \"\"                \r\n                };\r\n            } \r\n            componentDidMount()\r\n            {                \r\n                localStorage.setItem(\"source\", \"guardian\");\r\n                \r\n            }              \r\n\r\n            async bingAutosuggest()\r\n            {            \r\n                const url = \"https://likhita.cognitiveservices.azure.com/bing/v7.0/suggestions?q=\" + this.state.query;\r\n                let suggestions = [];\r\n                \r\n                const response = await fetch(url,{ headers:\r\n                    {\r\n                        \"Ocp-Apim-Subscription-Key\": \"274d08877b924b03953cab19cc643715\"\r\n                    }\r\n                });\r\n                const data = await response.json();\r\n                if(data._type === \"Suggestions\")\r\n                {\r\n                    suggestions = data.suggestionGroups[0].searchSuggestions.map((result) => ({'value': result.query, 'label' : result.query}));\r\n                   \r\n                    return suggestions;\r\n                }\r\n                return [];\r\n            }            \r\n            sendToBookmark()\r\n            {                        \r\n                this.toggleShow();\r\n                if(!this.state.bookmark)\r\n                {\r\n                    if(localStorage.getItem(this.props.article.id)==null)\r\n                        localStorage.setItem(this.props.article.id, JSON.stringify(this.props.article));\r\n                }\r\n                else{\r\n                    localStorage.removeItem(this.props.article.id);\r\n                }\r\n            }      \r\n            handleBookmark(event)\r\n            {\r\n                 \r\n                this.setState({\r\n                    bookmark: !this.state.bookmark\r\n                })                \r\n                this.props.history.push(\"/bookmarked\");                \r\n            }   \r\n            componentDidUpdate(prev_prop,prev_state)\r\n            {\r\n                if(prev_state.source === this.state.source)\r\n                    return;\r\n                             \r\n            }\r\n\r\n            \r\n\r\n\r\n\r\n            render()\r\n            {                                   \r\n                const source = this.state.source;\r\n                \r\n                \r\n                var hide_status=\"\";\r\n                var current_location = this.props.location.pathname;\r\n                if(current_location.includes(\"bookmarked\") || current_location.includes(\"article\") || current_location.includes(\"search\"))\r\n                    hide_status = \"hidden\";\r\n                else\r\n                    hide_status = \"\";\r\n                  \r\n                           \r\n                return(\r\n                    <>\r\n                        <Navbar className=\"color-nav\" variant=\"dark\" expand=\"lg\" > \r\n                            <AsyncSelect                                 \r\n                                className={`react-select-container`}\r\n                                width='500px'                          \r\n                                loadOptions={this.bingAutosuggest.bind(this)}                                                            \r\n                                onInputChange= {(inputValue) =>                                 \r\n                                    {                                                                                    \r\n                                        this.setState( {query : inputValue});\r\n                                    }}  \r\n                                                      \r\n                                noOptionsMessage={() => \"No Match\"}    \r\n                                onChange={(option)=> {             \r\n                                    this.setState({defaultValue: option.value})                             \r\n                                    this.props.history.push(`/search/${option.value}`)                                                                                                                   \r\n                                }} \r\n                                value = {{value: \"hi\", label: current_location.includes(\"search\")?this.state.defaultValue:\"Enter Keyword\"}}\r\n                            />       \r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">                                                   \r\n                            <Nav className=\"mr-auto\">                                  \r\n                                <Nav.Link as={NavLink} to={`/${source}/home`}>Home</Nav.Link>\r\n                                <Nav.Link as={NavLink} to={`/${source}/world`}>World</Nav.Link>\r\n                                <Nav.Link as={NavLink} to={`/${source}/politics`}>Politics</Nav.Link>\r\n                                <Nav.Link as={NavLink} to={`/${source}/business`}>Business</Nav.Link>\r\n                                <Nav.Link as={NavLink} to={`/${source}/technology`}>Technology</Nav.Link> \r\n                            </Nav>\r\n                            <Nav>                                  \r\n                                \r\n                                    <span style={{color: \"white\"}} id=\"bookmark_unclicked\" className ={`bookmark ${current_location.includes(\"bookmarked\") ? \"hidden\" : \"\"}`} onClick= {(event) => \r\n                                    {\r\n                                        this.handleBookmark();\r\n                                        event.stopPropagation();\r\n                                    }}><Tooltip title=\"Bookmark\" placement=\"bottom\" arrow><Bookmark /></Tooltip></span> \r\n                                    <span style={{color: \"white\"}}  id=\"bookmark_clicked\" className ={`bookmark ${ current_location.includes(\"bookmarked\") ? \"\" : \"hidden\"}`} onClick= {(event) => {\r\n                                    this.handleBookmark();\r\n                                    event.stopPropagation();\r\n                                    }}><Tooltip title=\"Bookmark\" placement=\"bottom\" ><BookmarkFill /></Tooltip></span>\r\n                                                                                                                                                                   \r\n                            </Nav>                                    \r\n                            <span className = {`${hide_status}`} style={{color: \"white\"}}>NY Times </span>                                                                                    \r\n                            <Form>                                                                    \r\n                                <Form.Check size={50}\r\n                                type=\"switch\"\r\n                                id=\"custom-switch\"\r\n                                className = {`${hide_status}`}                                    \r\n                                label=\"\"\r\n                                defaultChecked=\"checked\"\r\n                                onChange={ () => \r\n                                    {\r\n                                        \r\n                                        const toggled_src = this.state.source===\"guardian\"?\"nytimes\":\"guardian\"  \r\n                                        this.setState({source : toggled_src})  \r\n                                        const field = this.props.location.pathname.split(\"/\").slice(-1);                                                                                                               \r\n                                        this.props.history.push(`/${toggled_src}/${field}`)                                        \r\n                                        \r\n                                    }\r\n                                }\r\n                                />                                 \r\n                                \r\n                            </Form>\r\n                            <span className = {`${hide_status}`} style={{color: \"white\"}}>Guardian</span>\r\n                            </Navbar.Collapse>    \r\n                    </Navbar>\r\n                     \r\n                    \r\n                    </>\r\n                );\r\n                }\r\n            }\r\n    //}\r\n\r\nexport default withRouter(NavBar);","import React, { Component } from 'react';\r\nimport { MdShare, MdDelete } from 'react-icons/md';\r\nimport { EmailIcon, FacebookIcon, TwitterIcon, FacebookShareButton, EmailShareButton, TwitterShareButton } from \"react-share\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {ModalTitle } from 'react-bootstrap';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './results.css'\r\n\r\nclass BookmarkedArticle extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delete: false,\r\n      shows: false,\r\n      showd: false,\r\n      chosenArticle: [],\r\n      click: false,      \r\n      source: \"\",\r\n      message: \"\",\r\n      shareArticle : []\r\n    }\r\n  }\r\n\r\n  handleClose() { //Share Modal\r\n    this.setState(\r\n      {\r\n        shows: false\r\n      }\r\n    );\r\n  }\r\n\r\n  handleShow() { //Share Modal   \r\n    this.setState(\r\n      {\r\n        shows: true\r\n      }\r\n    );\r\n  }\r\n\r\n  toggleShow() { //Toast\r\n    this.setState(\r\n      {\r\n        showd: !this.state.showd\r\n      });\r\n  }\r\n\r\n  handleDeletion(post) {\r\n    var favs = JSON.parse(localStorage.getItem('articles'));\r\n    //this.setState({delete : !this.state.delete});\r\n    this.toggleShow();\r\n    if(post.post.id)\r\n    {\r\n      //favs[post.post.id] = null;\r\n      delete favs[post.post.id];\r\n    }\r\n    else if(post.post.web_url)\r\n    {\r\n      //favs[post.post.web_url] = null;\r\n      delete favs[post.post.web_url];\r\n    }\r\n    if (post.post.webUrl != null) {\r\n      this.setState(\r\n        {\r\n          message: \"Removing - \" + post.post.webTitle,\r\n        });\r\n    }\r\n    else {\r\n      this.setState(\r\n        {\r\n          message: \"Removing - \" + post.post.headline.main,\r\n        });\r\n    }\r\n    localStorage.removeItem('articles');\r\n    localStorage.setItem('articles', JSON.stringify(favs));\r\n  }\r\n\r\n  detailedArticle(post) //updated func that works from postsg\r\n          {                     \r\n            this.setState(\r\n              {\r\n              click: true\r\n              }\r\n            );            \r\n            var id, source;           \r\n            if(post.id)\r\n            {\r\n              id = post.id;\r\n              source = \"guardian\";\r\n            }                             \r\n            else if(post.web_url)\r\n            {\r\n              id = post.web_url;\r\n              source = \"nytimes\"\r\n            }\r\n                                    \r\n            fetch(`/api/detailedArticle/?source=${source}&id=${id}`)\r\n            .then(response => response.json())\r\n            .then((data) => { \r\n              this.setState({loading:false})\r\n              if(source === \"guardian\")\r\n              {\r\n                // this.setState({ chosenArticle: data.response.content }) \r\n                this.props.history.push({\r\n                  pathname: `/article`,\r\n                  state: {\"article\" : data.response.content, 'source' : source}\r\n                });\r\n              }\r\n              else if(source === \"nytimes\")\r\n              {\r\n                // this.setState({ chosenArticle: data.response.docs[0]})\r\n                this.props.history.push({\r\n                  pathname: `/article`,\r\n                  state: {\"article\" : data.response.docs[0], 'source' : source}\r\n                });\r\n              }\r\n              })\r\n            .catch(error => console.log(error));            \r\n          }                  \r\n\r\n\r\n  sectionColor(section)\r\n        {\r\n          var color;\r\n          if(section === \"WORLD\")\r\n            color = \"rgb(193, 74, 240)\"\r\n          else if(section === \"POLITICS\")\r\n            color = \"rgb(6, 180, 172)\"\r\n            \r\n          else if(section === \"BUSINESS\")\r\n            color = \"rgb(63, 190, 240)\"\r\n            \r\n          else if(section === \"TECHNOLOGY\")\r\n            color = \"rgb(173, 255, 47)\"\r\n            \r\n          else if(section === \"SPORTS\" || section === \"SPORT\")\r\n            color = \"rgb(228, 228, 2)\"\r\n            \r\n          else if(section === \"GUARDIAN\")\r\n            color = \"rgb(3, 3, 109)\"\r\n            \r\n          else if(section === \"NYTIMES\")\r\n            color = \"rgb(128, 128, 128)\"\r\n           \r\n          else\r\n            color = \"rgb(119, 117, 117)\"\r\n           \r\n          return color;\r\n        }\r\n        fontColor(section)\r\n        {\r\n          if(section === \"TECHNOLOGY\" || section === \"SPORTS\" || section === \"NYTIMES\" || section === \"SPORT\")\r\n            return \"black\";\r\n          else\r\n            return \"white\";\r\n        }\r\n  largestImage(result)\r\n        {          \r\n          if(result.multimedia===null)\r\n            return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\";\r\n               \r\n          for(var i=0;i<result.multimedia.length;i++)\r\n          {\r\n            if(result.multimedia[i].width>=2000)\r\n              return result.multimedia[i].url;\r\n          }               \r\n          return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\" ;\r\n        }   \r\n  renderAppropriately(post) {\r\n    \r\n    if (post.webUrl != null) //for guardian\r\n    {\r\n      return (\r\n        <>\r\n        <Col xl={3}>\r\n        <Card className=\"clickable\" style={{width:\"18rem\"}} onClick={(e) => {\r\n            e.preventDefault();\r\n            this.detailedArticle(post);                      \r\n          }}>\r\n            <Card.Header>\r\n              <Card.Title  style={{ fontStyle: \"italic\"}}>\r\n                  <span className=\"line-clamp\">{post.webTitle}</span>\r\n                  <span onClick={(e) => { \r\n                      e.stopPropagation(); \r\n                      this.setState({\r\n                          shareArticle : post,\r\n                      });                    \r\n                      this.handleShow();                       \r\n                      }}><MdShare /></span> \r\n                      <span onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.handleDeletion({ post });\r\n                      }}><MdDelete />\r\n                  </span>\r\n              </Card.Title> \r\n            </Card.Header>                   \r\n            <Card.Img variant=\"top\" src={((empty) => {\r\n                      if (empty)\r\n                          return \"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"\r\n                      else\r\n                          return post.blocks.main.elements[0].assets[post.blocks.main.elements[0].assets.length-1].file;\r\n                  })(post.blocks.main.elements[0].assets.length === 0)} />\r\n            <Card.Text>\r\n              <Row style={{paddingTop:\"2%\"}}>\r\n                <Col xs={5}sm={5} style={{ fontStyle: \"italic\", fontSize: \"14px\"}}>{post.webPublicationDate.slice(0,10)}</Col>\r\n                <Col style={{padding: \"0\"}}>\r\n                <span style={{\r\n                              backgroundColor: this.sectionColor(post.sectionId.toUpperCase()),\r\n                              color: this.fontColor(post.sectionId.toUpperCase()),\r\n                              fontSize : \"13px\",\r\n                              fontWeight : \"bold\",\r\n                              paddingLeft: \"3px\",\r\n                              paddingRight: \"3px\",\r\n                              borderRadius: \"10%\"\r\n                              }}>{ post.sectionId.toUpperCase() }</span>    <span> </span>            \r\n                  <span style={{\r\n                                  backgroundColor: this.sectionColor(\"GUARDIAN\"),\r\n                                  color: this.fontColor(\"GUARDIAN\"),\r\n                                  fontWeight : \"bold\",\r\n                                  fontSize : \"13px\",\r\n                                  paddingLeft: \"3px\",\r\n                                  paddingRight: \"3px\",\r\n                                  borderRadius: \"10%\"\r\n                                  }}>                          \r\n                  GUARDIAN\r\n                  </span>\r\n                </Col>                                                                                                                \r\n              </Row>    \r\n            </Card.Text>                                                                                                                                                                                                                                                                                               \r\n          </Card>\r\n        </Col>\r\n           \r\n        </>                                       \r\n      );\r\n    }  \r\n    else if( post.web_url != null )\r\n    { //for NY Times  \r\n      return (\r\n        <>\r\n        <Col xl={3}>\r\n        <Card className=\"clickable\" style={{width:\"18rem\"}} onClick={(e) => {\r\n            e.preventDefault();\r\n            this.detailedArticle(post);                      \r\n          }}>  \r\n          <Card.Header>\r\n            <Card.Title style={{ fontStyle: \"italic\"}}>\r\n              <span className=\"line-clamp\">{post.headline.main}</span>\r\n              <span onClick={(e) => { \r\n                  e.stopPropagation(); \r\n                  this.setState({\r\n                      shareArticle : post,\r\n                  });                    \r\n                  this.handleShow();                       \r\n                  }}><MdShare /></span> \r\n                  <span onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    this.handleDeletion({ post });\r\n                  }}><MdDelete />\r\n              </span>\r\n            </Card.Title>\r\n          </Card.Header>                                            \r\n          <Card.Img variant=\"top\" src={this.largestImage(post)} />                           \r\n          <Card.Text>\r\n            <Row>\r\n              <Col xs={5} sm={5} style={{ fontStyle: \"italic\", fontSize: \"14px\"}}>{post.pub_date.slice(0,10)}</Col>\r\n              <Col style={{padding: \"0\"}}>\r\n                <span style={{\r\n                              backgroundColor: this.sectionColor(post.section_name.toUpperCase()),\r\n                              color: this.fontColor(post.section_name.toUpperCase()),\r\n                              fontWeight : \"bold\",\r\n                              fontSize : \"13px\",\r\n                              paddingLeft: \"3px\",\r\n                              paddingRight: \"3px\",\r\n                              borderRadius: \"10%\"\r\n                              }}>\r\n                  { post.section_name.toUpperCase() } \r\n                </span> <span> </span>\r\n                <span style={{\r\n                              backgroundColor: this.sectionColor(\"NYTIMES\"),\r\n                              color: this.fontColor(\"NYTIMES\"),\r\n                              fontWeight : \"bold\",\r\n                              fontSize : \"13px\",\r\n                              paddingLeft: \"3px\",\r\n                              paddingRight: \"3px\",\r\n                              borderRadius: \"10%\"\r\n                              }}>\r\n                  NYTIMES</span>\r\n              </Col>                                                                                                                \r\n            </Row>      \r\n          </Card.Text>                                                                                                                                                                                                                                                                                        \r\n          </Card>\r\n        </Col>\r\n           \r\n        </>       \r\n        \r\n      )\r\n    }\r\n  }\r\n  openBookmarks()\r\n  {\r\n    if(localStorage.getItem('articles'))\r\n     return (JSON.parse(localStorage.getItem('articles')));\r\n    \r\n    return {}\r\n  }\r\n  render() {\r\n    const favs = this.openBookmarks()\r\n    var arr = [];\r\n    Object.keys(favs).forEach(function (key) {\r\n      arr.push(favs[key]);\r\n    });  \r\n    var empty_msg;\r\n    if(arr.length===0)     \r\n      empty_msg = <h3 style={{textAlign: \"center\"}}>You have no saved articles</h3>\r\n    \r\n    var msg=\"\";\r\n    if(this.state.shareArticle.webTitle)\r\n        {\r\n          msg = this.state.shareArticle.webTitle\r\n          \r\n        }\r\n        else if(this.state.shareArticle.abstract)\r\n        {\r\n          msg = this.state.shareArticle.abstract\r\n          \r\n        }\r\n    return (\r\n      <Container style={{position: \"relative\"}} fluid>\r\n        {empty_msg?<h3 style={{textAlign: \"center\"}}>{empty_msg}</h3>:<h3>Favourites</h3>}                        \r\n        <Toast style={{\r\n                        position: 'absolute',                        \r\n                        top: \"5%\",\r\n                        zIndex : 2\r\n                        }}\r\n          className=\"toast\" onClose={() => this.toggleShow()} show={this.state.showd} delay={3000} autohide>                                \r\n            <Toast.Header>{this.state.message}</Toast.Header>\r\n        </Toast>   \r\n        <Container fluid><Row>{arr.map(article => this.renderAppropriately(article))}</Row></Container>        \r\n        <Modal show={this.state.shows} onHide={() => this.handleClose()} dialogClassName={\"primaryModal\"}>\r\n          <Modal.Header closeButton={(e) => e.stopPropagation()}>\r\n            <Modal.Title>{msg}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body id=\"modal-body\">\r\n            <ModalTitle >Share via</ModalTitle>\r\n            <Row>\r\n              <Col>\r\n                <FacebookShareButton url={this.state.shareArticle.webUrl}><FacebookIcon round={true}></FacebookIcon></FacebookShareButton>\r\n              </Col>\r\n              <Col>\r\n                <TwitterShareButton url={this.state.shareArticle.webUrl}><TwitterIcon round={true}></TwitterIcon></TwitterShareButton>\r\n              </Col>\r\n              <Col>\r\n                <EmailShareButton url={this.state.shareArticle.webUrl}><EmailIcon round={true}></EmailIcon></EmailShareButton>\r\n              </Col>\r\n            </Row> \r\n          </Modal.Body>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(BookmarkedArticle);","import React, {Component} from 'react';\r\nimport {MdShare} from 'react-icons/md';\r\nimport './posts.css';  \r\nimport { withRouter} from 'react-router-dom';\r\nimport { EmailIcon, FacebookIcon,TwitterIcon, FacebookShareButton, EmailShareButton, TwitterShareButton} from \"react-share\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { ModalTitle } from 'react-bootstrap';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n    \r\n    class Posts extends Component{\r\n        \r\n      constructor(props)\r\n          {\r\n            super(props);\r\n            this.state = {\r\n              chosenArticle : [],\r\n              click : null,       \r\n              source : this.props.source, \r\n              show : false,    \r\n              shareArticle : [],\r\n              loading : false                            \r\n            }                                 \r\n          }\r\n          \r\n      \r\n        handleClose()\r\n          {\r\n            this.setState(\r\n              {\r\n                show : false\r\n              }\r\n            );\r\n          }\r\n          \r\n          \r\n        handleShow()\r\n          {\r\n            this.setState(\r\n              {\r\n                show : true,                \r\n              }\r\n            );\r\n\r\n          }            \r\n          \r\n        sectionColor(section)\r\n        {\r\n          var color;\r\n          if(section === \"WORLD\")\r\n            color = \"rgb(193, 74, 240)\"\r\n          else if(section === \"POLITICS\")\r\n            color = \"rgb(6, 180, 172)\"\r\n            \r\n          else if(section === \"BUSINESS\")\r\n            color = \"rgb(63, 190, 240)\"\r\n            \r\n          else if(section === \"TECHNOLOGY\")\r\n            color = \"rgb(173, 255, 47)\"\r\n            \r\n          else if(section === \"SPORTS\" || section === \"SPORT\")\r\n            color = \"rgb(228, 228, 2)\"\r\n            \r\n          else if(section === \"GUARDIAN\")\r\n            color = \"rgb(3, 3, 109)\"\r\n            \r\n          else if(section === \"NYTIMES\")\r\n            color = \"rgb(128, 128, 128)\"\r\n           \r\n          else\r\n            color = \"rgb(119, 117, 117)\"\r\n           \r\n          return color;\r\n        }\r\n        fontColor(section)\r\n        {\r\n          if(section === \"TECHNOLOGY\" || section === \"SPORTS\" || section === \"NYTIMES\" || section === \"SPORT\")\r\n            return \"black\";\r\n          else\r\n            return \"white\";\r\n        }\r\n        detailedArticle(post)\r\n          {                                            \r\n            var id;           \r\n            if(post.result.id)\r\n              id = post.result.id;               \r\n            else if(post.result.url)\r\n              id = post.result.url;  \r\n            this.setState({loading:true})                   \r\n            fetch(`/api/detailedArticle/?source=${this.props.source}&id=${id}`)\r\n            .then(response => response.json())\r\n            .then((data) => {               \r\n              if(this.props.source === \"guardian\")\r\n              {\r\n                // this.setState({ chosenArticle: data.response.content }) \r\n                this.setState({loading: false})\r\n                \r\n                this.props.history.push({\r\n                  pathname: `/article`,\r\n                  state: {\"article\" : data.response.content, 'source' : this.props.source, }\r\n                });\r\n              }\r\n              else if(this.props.source === \"nytimes\")\r\n              {\r\n                // this.setState({ chosenArticle: data.response.docs[0]})   \r\n                this.setState({loading: false})\r\n                this.props.history.push({\r\n                  pathname: `/article`,\r\n                  state: {\"article\" : data.response.docs[0], 'source' : this.props.source, }\r\n                });\r\n              }\r\n              })            \r\n            \r\n            .catch(error => console.log(error));         \r\n          }                  \r\n\r\n\r\n        largestImage(result)\r\n          {          \r\n            if(result.multimedia===null)\r\n              return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\";\r\n                 \r\n            for(var i=0;i<result.multimedia.length;i++)\r\n            {\r\n              if(result.multimedia[i].width>=2000)\r\n                return result.multimedia[i].url;\r\n            }               \r\n            return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\" ;\r\n          }               \r\n        \r\n        \r\n        render()\r\n          {                                  \r\n            let posts = this.props.posts;\r\n                        \r\n            if(this.state.loading === \"true\")\r\n            {\r\n              return(\r\n                <Container style={{ margin: \"auto\", marginTop: \"20%\", textAlign:\"center\"}}><h2>Loading</h2><Spinner animation=\"grow\"  style={{color: \"rgb(9, 9, 126)\"}}/></Container>\r\n              )\r\n            }\r\n            if(this.props.source === \"guardian\" && this.state.loading=== false)  \r\n            {            \r\n              return (\r\n                <>                                        \r\n                  {posts.map((result) => (                  \r\n                    <>  \r\n                    <Card className=\"clickable\" fluid onClick={(e) => {\r\n                              e.preventDefault();\r\n                              this.setState({loading: true});\r\n                              this.detailedArticle({result});                      \r\n                              }}>  \r\n                      <Row>\r\n                        <Col sm={4}>\r\n                          <Card.Img fluid variant=\"top\" src={((empty) => {\r\n                                  if (empty)\r\n                                      return \"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"\r\n                                  else\r\n                                      return result.blocks.main.elements[0].assets[result.blocks.main.elements[0].assets.length-1].file;\r\n                            })(result.blocks.main.elements[0].assets.length === 0)} /> \r\n                        </Col>\r\n                        <Col>\r\n                          <Card.Title style={{ fontStyle: \"italic\"}}>\r\n                                {result.webTitle}\r\n                                <span onClick={(e) => { \r\n                                    e.stopPropagation(); \r\n                                    this.setState({\r\n                                        shareArticle : result,\r\n                                    });                    \r\n                                    this.handleShow();                       \r\n                                    }}><MdShare /></span> \r\n                            </Card.Title>\r\n                            <Card.Text>                                                                                      \r\n                              <Row>\r\n                                  <Col className=\"guardian-div\">{result.blocks.body[0].bodyTextSummary} </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                  <Col style={{ fontStyle: \"italic\"}}>{result.webPublicationDate.slice(0,10)}</Col>\r\n                                  <Col style={{textAlign: 'right'}}><span style={{\r\n                                    backgroundColor: this.sectionColor(result.sectionName.toUpperCase()),\r\n                                    color: this.fontColor(result.sectionName.toUpperCase()),\r\n                                    fontWeight : \"bold\",\r\n                                    paddingLeft: \"7px\",\r\n                                    paddingRight: \"7px\",\r\n                                    borderRadius: \"10%\"\r\n                                    }}>{result.sectionName.toUpperCase()}</span></Col>                                                                                                                                                     \r\n                              </Row>                                            \r\n                          </Card.Text>                           \r\n                        </Col>\r\n                      </Row>                                                                                                                                                                                                                                                      \r\n                    </Card> \r\n                    </>                                                  \r\n                  ))}\r\n                  <Modal show={this.state.show} onHide={ (e) => {\r\n                    //e.stopPropagation();\r\n                    this.handleClose();\r\n                  }} dialogClassName={\"primaryModal\"}>\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>{ this.state.shareArticle.webTitle }</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body id=\"modal-body\"> \r\n                      <ModalTitle >Share via</ModalTitle>\r\n                    <Row>\r\n                      <Col>\r\n                        <FacebookShareButton url={this.state.shareArticle.webUrl}><FacebookIcon round={true}></FacebookIcon></FacebookShareButton>\r\n                      </Col>\r\n                      <Col>\r\n                       <TwitterShareButton url={this.state.shareArticle.webUrl}><TwitterIcon round={true}></TwitterIcon></TwitterShareButton>\r\n                      </Col>\r\n                      <Col>\r\n                        <EmailShareButton url={this.state.shareArticle.webUrl}><EmailIcon round={true}></EmailIcon></EmailShareButton>\r\n                      </Col>\r\n                    </Row>                                                                                                               \r\n                    </Modal.Body>                                              \r\n                  </Modal>                                  \r\n                </>\r\n              )\r\n            }   \r\n            else if (this.props.source === \"nytimes\" && this.state.loading=== false)\r\n            {\r\n              return (\r\n                <>                                        \r\n                  {posts.map((result) => (                  \r\n                    <>  \r\n                    <Card className=\"clickable\" fluid onClick={(e) => {\r\n                              e.preventDefault();\r\n                              this.setState({loading: true});\r\n                              this.detailedArticle({result});                      \r\n                              }}>   \r\n                      <Row>\r\n                        <Col sm={4}>\r\n                          <Card.Img style={{border: \"1px solid #ddd\",\r\n                                            borderRadius: \"4px\",  /* Rounded border */\r\n                                            padding: \"5px\" /* Some padding */                                            \r\n                                          }}\r\n                              variant=\"top\" src={this.largestImage(result)} alt=\"NY Times img\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <Card.Title style={{ fontStyle: \"italic\"}}>\r\n                              { result.title }\r\n                                <span onClick={(e) => { \r\n                                    e.stopPropagation(); \r\n                                    this.setState({\r\n                                        shareArticle : result,\r\n                                    });                    \r\n                                    this.handleShow();                       \r\n                                    }}><MdShare /></span> \r\n                          </Card.Title>\r\n                          <Card.Text>\r\n                            <Row>\r\n                              <Col>{ result.abstract }</Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col  style={{ fontStyle: \"italic\"}}>{ result.published_date.slice(0,10)}</Col>\r\n                              <Col style={{textAlign: 'right'}}>\r\n                                <span style={{\r\n                                  backgroundColor: this.sectionColor(result.section.toUpperCase()),\r\n                                  color: this.fontColor(result.section.toUpperCase()),\r\n                                  fontWeight : \"bold\",\r\n                                  paddingLeft: \"7px\",\r\n                                  paddingRight: \"7px\",\r\n                                  borderRadius: \"10%\"\r\n                                  }}>{ result.section.toUpperCase() } </span>\r\n                              </Col>                                                                                                                   \r\n                            </Row>                                                                                                    \r\n                          </Card.Text>                          \r\n                          <Card.Text>\r\n                            \r\n                            \r\n                          </Card.Text>      \r\n                        </Col>\r\n                      </Row>                \r\n                                                                                                                                                          \r\n                          </Card> \r\n                      </>                                                  \r\n                  ))}\r\n                  <Modal show={this.state.show} onHide={ (e) => {\r\n                    //e.stopPropagation();\r\n                    this.handleClose();\r\n                  }} dialogClassName={\"primaryModal\"}>\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>{ this.state.shareArticle.webTitle }</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body id=\"modal-body\">                        \r\n                      <ModalTitle >Share via</ModalTitle>\r\n                      <FacebookShareButton url={this.state.shareArticle.webUrl}><FacebookIcon round={true}></FacebookIcon></FacebookShareButton>\r\n                      <TwitterShareButton url={this.state.shareArticle.webUrl}><TwitterIcon round={true}></TwitterIcon></TwitterShareButton>\r\n                      <EmailShareButton url={this.state.shareArticle.webUrl}><EmailIcon round={true}></EmailIcon></EmailShareButton>\r\n                    </Modal.Body>                                              \r\n                  </Modal>                                  \r\n                </>\r\n              )            \r\n            }    \r\n            else\r\n            {\r\n              return(\r\n                <></>\r\n              )\r\n            }\r\n          };\r\n    }\r\n    export default withRouter(Posts);","import React, { Component }from 'react';\r\nimport './posts.css';\r\nimport Posts from './postsg';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport {Container } from 'react-bootstrap';\r\nclass Home extends Component{\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = {\r\n        posts: [],  \r\n        loading: true, \r\n        source: \"guardian\"                  \r\n      }\r\n    }\r\n                \r\n      componentDidMount() {    \r\n        console.log(this.props);        \r\n        const source = this.props.match.params.source;\r\n        const field =  this.props.match.params.field; \r\n        // this.setState({\r\n        //   source : source,\r\n        //   field : field\r\n        // })                                 \r\n        console.log(\"goign here\");        \r\n        const url = `/api/?source=${source}&field=${field}`;\r\n        var posts = []\r\n        this.setState({loading:true})\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then((data) => { \r\n          \r\n          if(source === \"guardian\")\r\n          {            \r\n            if(data.response.results)\r\n            {\r\n              for(var i=0;i<Math.min(data.response.results.length, 10);i++)\r\n              {\r\n                if(data.response.results[i].blocks && data.response.results[i].blocks.main && data.response.results[i].blocks.main.elements && data.response.results[i].blocks.main.elements[0].assets)\r\n                  posts.push(data.response.results[i])\r\n              }\r\n            }\r\n            this.setState({ posts: posts, source : source, loading:false\r\n            })            \r\n            posts = []           \r\n          }\r\n          else if(source === \"nytimes\")\r\n          {\r\n            i=0;\r\n            \r\n            if(data.results)\r\n            {\r\n              while(posts.length<10)\r\n              {              \r\n                console.log(data.results.length)  \r\n                posts.push(data.results[i++])\r\n              }\r\n            }\r\n            this.setState({ posts: posts, source : source, loading:false\r\n              })  \r\n            posts = []  \r\n          }\r\n         })\r\n        .catch(error => console.log(error));                                      \r\n      }   \r\n       \r\n      componentDidUpdate(previous_props, previous_state)\r\n      {        \r\n        \r\n        const old_source = previous_props.match.params.source;\r\n        const old_field =  previous_props.match.params.field;\r\n        const source = this.props.match.params.source;\r\n        const field =  this.props.match.params.field;\r\n        console.log(source,field,old_source,old_field);\r\n        if(old_source === source && old_field === field)\r\n          return;\r\n\r\n                                                    \r\n        console.log(source+field);\r\n        var posts = []\r\n        const url = `/api/?source=${source}&field=${field}`;\r\n        this.setState({loading:true})\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then((data) => {           \r\n          if(source === \"guardian\")\r\n          {\r\n            var i=0;\r\n            if(data.response.results)\r\n            {\r\n              for(i=0;i<Math.min(data.response.results.length, 10);i++)\r\n              {\r\n                if(data.response.results[i].blocks && data.response.results[i].blocks.main && data.response.results[i].blocks.main.elements && data.response.results[i].blocks.main.elements[0].assets)\r\n                  posts.push(data.response.results[i])\r\n              }\r\n            }\r\n            this.setState({ \r\n              source: source,\r\n              posts: posts, \r\n              loading : false                           \r\n            })     \r\n            posts = []\r\n          }\r\n          else if(source === \"nytimes\")\r\n          {\r\n            i=0;\r\n            \r\n            if(data.results)\r\n            {\r\n              while(posts.length<10)\r\n              {                               \r\n                posts.push(data.results[i++])\r\n              }\r\n            }\r\n            this.setState({ \r\n              source: source,\r\n              posts: posts,  \r\n              loading : false                          \r\n            })                                    \r\n          }\r\n         })\r\n        .catch(error => console.log(error));         \r\n      }\r\n    render()\r\n    {\r\n\r\n      //console.log(localStorage.getItem('toggleValue')); \r\n      console.log(this.state.posts)                                            \r\n      return (\r\n          <>                   \r\n          {this.state.loading?<Container style={{ margin: \"auto\", marginTop: \"20%\", textAlign: \"center\"}}><Spinner animation=\"grow\"  style={{color: \"rgb(9, 9, 126)\"}}/><h2>Loading</h2></Container>:<Posts source={this.state.source} posts={this.state.posts} />}   \r\n          </>                                       \r\n        );\r\n    }\r\n}\r\n    \r\n    \r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { EmailIcon, FacebookIcon,TwitterIcon, FacebookShareButton, EmailShareButton, TwitterShareButton} from \"react-share\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport {Row, Col, Container } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { ModalTitle } from 'react-bootstrap';\r\nimport {MdShare} from 'react-icons/md';\r\nimport './results.css'\r\nclass SearchResults extends Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            searchResG : [],\r\n            searchResN : [],\r\n            show : false,\r\n            click : false,\r\n            shareArticle: [],\r\n            chosenArticle: [],\r\n            source : \"\"\r\n        }\r\n        console.log(this.props);\r\n    }\r\n    sectionColor(section)\r\n        {\r\n          var color;\r\n          if(section === \"WORLD\")\r\n            color = \"rgb(193, 74, 240)\"\r\n          else if(section === \"POLITICS\")\r\n            color = \"rgb(6, 180, 172)\"\r\n            \r\n          else if(section === \"BUSINESS\")\r\n            color = \"rgb(63, 190, 240)\"\r\n            \r\n          else if(section === \"TECHNOLOGY\")\r\n            color = \"rgb(173, 255, 47)\"\r\n            \r\n          else if(section === \"SPORTS\" || section === \"SPORT\")\r\n            color = \"rgb(228, 228, 2)\"\r\n            \r\n          else if(section === \"GUARDIAN\")\r\n            color = \"rgb(3, 3, 109)\"\r\n            \r\n          else if(section === \"NYTIMES\")\r\n            color = \"rgb(128, 128, 128)\"\r\n           \r\n          else\r\n            color = \"rgb(119, 117, 117)\"\r\n           \r\n          return color;\r\n        }\r\n        fontColor(section)\r\n        {\r\n          if(section === \"TECHNOLOGY\" || section === \"SPORTS\" || section === \"NYTIMES\" || section === \"SPORT\")\r\n            return \"black\";\r\n          else\r\n            return \"white\";\r\n        }\r\n    componentDidMount()\r\n    {\r\n        console.log(\"happening\");\r\n        var posts=[]\r\n        //fetch(\"/api/search/guardian/?q=ricciardo\")\r\n        fetch(`/api/search/guardian/?q=${this.props.match.params.query}`)        \r\n        .then(response => response.json())\r\n        .then((data) => { \r\n            console.log(data);\r\n            var i=0;\r\n            if(data.response.results)\r\n            {\r\n                for(i=0;i<(Math.min(data.response.results.length, 5));i++)\r\n                {\r\n                  if(data.response.results[i].blocks && data.response.results[i].blocks.main && data.response.results[i].blocks.main.elements && data.response.results[i].blocks.main.elements[0].assets)\r\n                    posts.push(data.response.results[i])\r\n                }                            \r\n            }\r\n            console.log(posts)\r\n            this.setState({ searchResG : posts })\r\n             \r\n        })                        \r\n        //.then((data) => { console.log(data.response.results)})\r\n        .catch(error => console.log(error));\r\n        var nyposts=[];     \r\n        //fetch(`/api/search/nytimes/?q=ricciardo`)   \r\n        fetch(`/api/search/nytimes/?q=${this.props.match.params.query}`)        \r\n        .then(response => response.json())\r\n        .then((data) => { \r\n            console.log(data);            \r\n            console.log(\"coming here?\")\r\n            if(data.response.docs)\r\n            {\r\n              for(var i=0;i<Math.min(data.response.docs.length, 5); i++)\r\n              {              \r\n                //console.log(data.results.length)                \r\n                nyposts.push(data.response.docs[i])\r\n              }                            \r\n           }\r\n           console.log(nyposts);\r\n           this.setState({ searchResN: nyposts })  \r\n          }\r\n        )                         \r\n        //.then((data) => { console.log(data.response.docs)})\r\n        .catch(error => console.log(error));\r\n        \r\n    }\r\n    /*componentDidUpdate()\r\n    {\r\n        console.log(\"happening\");\r\n        //fetch(`/api/search/guardian/?q=${this.props.searchQuery}`)\r\n        fetch(`/api/search/guardian/?q=trump`)\r\n            .then(response => response.json())\r\n            .then((data) => { this.setState({ searchResG : data.response.results }) })                        \r\n            //.then((data) => { console.log(data.response)})\r\n            .catch(error => console.log(error));\r\n            \r\n        //fetch(`/api/search/nytimes/?q=${this.props.searchQuery}`)\r\n        fetch(`/api/search/nytimes/?q=trump`)\r\n            .then(response => response.json())\r\n            .then((data) => { this.setState({ searchResN : data.response.docs }) })                        \r\n            .then((data) => { console.log(data.response.docs)})\r\n            .catch(error => console.log(error));\r\n    }*/\r\n    handleShow()\r\n          {\r\n            this.setState(\r\n              {\r\n                show : true,                \r\n              }\r\n            );\r\n\r\n          }   \r\n    handleClose()\r\n    {\r\n    this.setState(\r\n        {\r\n        show : false\r\n        });\r\n    } \r\n    largestImage(result)\r\n        {          \r\n          console.log(result);\r\n          if(result.multimedia===null)\r\n            return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\";\r\n               \r\n          for(var i=0;i<result.multimedia.length;i++)\r\n          {\r\n            if(result.multimedia[i].width>=2000)\r\n              return result.multimedia[i].url;\r\n          }             \r\n          return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\" ;\r\n        } \r\n\r\n\r\n    share(post)\r\n    {                     \r\n      this.setState(\r\n        {\r\n        click: true\r\n        }\r\n      );            \r\n      console.log(post); \r\n      var id, source;           \r\n      if(post.result.id)\r\n        {\r\n            id = post.result.id;\r\n            source = \"guardian\"          \r\n        }               \r\n        else if(post.result.web_url)\r\n          {\r\n              id = post.result.web_url;\r\n              source = \"nytimes\"              \r\n          } \r\n      console.log(id);           \r\n      console.log(this.props.source);                       \r\n      fetch(`/api/detailedArticle/?source=${source}&id=${id}`)\r\n      .then(response => response.json())\r\n      .then((data) => { \r\n        this.setState({loading:false})\r\n        if(source === \"guardian\")\r\n        {\r\n          // this.setState({ chosenArticle: data.response.content }) \r\n          this.props.history.push({\r\n            pathname: `/article`,\r\n            state: {\"article\" : data.response.content, 'source' : source}\r\n          });\r\n        }\r\n        else if(source === \"nytimes\")\r\n        {\r\n          // this.setState({ chosenArticle: data.response.docs[0]})\r\n          this.props.history.push({\r\n            pathname: `/article`,\r\n            state: {\"article\" : data.response.docs[0], 'source' : source}\r\n          });\r\n        }\r\n        })            \r\n      .then((data)=> console.log(data.response.content))\r\n      .catch(error => console.log(error));  \r\n      //console.log(\"here\"+this.state.chosenArticle);            \r\n    }                  \r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n      console.log(\"search page loading\");\r\n      console.log(this.state.searchResG);\r\n      console.log(this.state.searchResN);  \r\n      \r\n        console.log(this.state.searchResN);\r\n        var guardian_results;\r\n        var nytimes_results;\r\n        if(this.state.searchResG)\r\n        {\r\n            guardian_results =\r\n                <>                                                                                   \r\n                {this.state.searchResG.map((result) => ( \r\n                        <Col xl={3}>               \r\n                            <Card className=\"clickable \"onClick={(e) => {\r\n                              e.preventDefault();\r\n                              this.share({result});                      \r\n                              }}> \r\n                              <Card.Header>\r\n                                <Card.Title style={{ fontStyle: \"italic\"}}>\r\n                                    {result.webTitle}\r\n                                    <span onClick={(e) => { \r\n                                        e.stopPropagation(); \r\n                                        this.setState({\r\n                                            shareArticle : result,\r\n                                        });   \r\n                                        console.log(\"somethin is happenin\")                 \r\n                                        this.handleShow();                       \r\n                                        }}><MdShare /></span> \r\n                                </Card.Title> \r\n                              </Card.Header>                  \r\n                              <Card.Img variant=\"top\" src={((empty) => {\r\n                                          if (empty)\r\n                                              return \"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"\r\n                                          else\r\n                                              return result.blocks.main.elements[0].assets[result.blocks.main.elements[0].assets.length-1].file;\r\n                                      })(result.blocks.main.elements[0].assets.length === 0)} />\r\n                                <Card.Text> \r\n                                  <Row>\r\n                                    <Col xs={5}>\r\n                                      <span style={{ fontStyle: \"italic\"}}>{result.webPublicationDate.slice(0,10)}</span>\r\n                                    </Col>  \r\n                                    <Col style={{textAlign: \"right\"}}>\r\n                                      <span style={{\r\n                                            backgroundColor: this.sectionColor(result.sectionName.toUpperCase()),\r\n                                            color: this.fontColor(result.sectionName.toUpperCase()),\r\n                                            fontWeight : \"bold\",\r\n                                            fontSize: \"13px\",\r\n                                            paddingLeft: \"7px\",\r\n                                            paddingRight: \"7px\",\r\n                                            borderRadius: \"10%\"\r\n                                            }}>{ result.sectionName.toUpperCase() } </span> \r\n                                    </Col>\r\n                                  </Row>                                            \r\n                                </Card.Text>\r\n                                \r\n                                                                                                                                                      \r\n                                                                                                                                                                \r\n                          </Card>\r\n                          \r\n                        </Col>\r\n                                                                   \r\n                ))}\r\n                 \r\n                \r\n            </>\r\n            \r\n        \r\n        }\r\n        console.log(this.state.searchResN);\r\n        \r\n        if(this.state.searchResN)\r\n        {            \r\n            nytimes_results = \r\n                <>                                                 \r\n                {this.state.searchResN.map((result) => (     \r\n                    <Col xl={3}>           \r\n                      <Card  className=\"clickable\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.share({result});                      \r\n                            }}>  \r\n                        <Card.Header>\r\n                          <Card.Title style={{ fontStyle: \"italic\"}}>\r\n                              {result.headline.main}                          \r\n                              <span onClick={(e) => { \r\n                                  e.stopPropagation(); \r\n                                  this.setState({\r\n                                      shareArticle : result,\r\n                                  });                    \r\n                                  this.handleShow();                       \r\n                                  }}><MdShare /></span> \r\n                          </Card.Title>                            \r\n                        </Card.Header> \r\n                        <Card.Img variant=\"top\" src={this.largestImage(result)} />                                        \r\n                        <Card.Text>                          \r\n                          <Row>\r\n                              <Col xs={5}>\r\n                                <span style={{ fontStyle: \"italic\"}} >{result.pub_date.slice(0,10)}</span>\r\n                              </Col>  \r\n                              <Col style={{textAlign: \"right\"}}>\r\n                              <span style={{\r\n                                  backgroundColor: this.sectionColor(result.section_name.toUpperCase()),\r\n                                  color: this.fontColor(result.section_name.toUpperCase()),\r\n                                  fontWeight : \"bold\",\r\n                                  paddingLeft: \"7px\",\r\n                                  paddingRight: \"7px\",\r\n                                  borderRadius: \"10%\",\r\n                                  fontSize: \"13px\",\r\n                                  }}>\r\n                                { result.section_name.toUpperCase() } \r\n                                </span>\r\n                              </Col>                                                                                                                 \r\n                          </Row> \r\n                        </Card.Text>                                                                                                                                                                                                                                                                                                                  \r\n                      </Card> \r\n                      </Col>                                      \r\n                ))}                                             \r\n            </>\r\n        }\r\n        var msg=\"\"\r\n            \r\n        if(this.state.shareArticle.webTitle)\r\n        {\r\n          msg = this.state.shareArticle.webTitle\r\n          \r\n        }\r\n        else if(this.state.shareArticle.abstract)\r\n        {\r\n          msg = this.state.shareArticle.abstract\r\n         \r\n        }\r\n            return(\r\n                <>\r\n                    <h3 style={{ paddingLeft: \"1%\"}}>Results</h3>\r\n                    <Container fluid>\r\n                      <Row>\r\n                        {guardian_results}\r\n                        {nytimes_results}\r\n                      </Row>\r\n                      \r\n                    </Container>                    \r\n                    <Modal show={this.state.show} onHide={ (e) => {\r\n                        //e.stopPropagation();\r\n                        this.handleClose();\r\n                      }} dialogClassName={\"primaryModal\"}>  \r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{ msg }</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body id=\"modal-body\">                        \r\n                        <ModalTitle >Share via</ModalTitle>\r\n                        <Row>\r\n                      <Col>\r\n                        <FacebookShareButton url={this.state.shareArticle.webUrl}><FacebookIcon round={true}></FacebookIcon></FacebookShareButton>\r\n                      </Col>\r\n                      <Col>\r\n                       <TwitterShareButton url={this.state.shareArticle.webUrl}><TwitterIcon round={true}></TwitterIcon></TwitterShareButton>\r\n                      </Col>\r\n                      <Col>\r\n                        <EmailShareButton url={this.state.shareArticle.webUrl}><EmailIcon round={true}></EmailIcon></EmailShareButton>\r\n                      </Col>\r\n                    </Row> \r\n                    </Modal.Body>                                              \r\n                </Modal>\r\n                </>\r\n            )\r\n        }\r\n        \r\n    \r\n}\r\n\r\nexport default withRouter(SearchResults)","import React, { Component } from 'react';\r\nimport './detailedarticle.css'\r\nimport { Bookmark, BookmarkFill, ChevronDown, ChevronUp } from 'react-bootstrap-icons';\r\nimport commentBox from 'commentbox.io';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport { Row, Col, Container} from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nimport { EmailIcon, FacebookIcon, TwitterIcon, FacebookShareButton, EmailShareButton, TwitterShareButton } from \"react-share\";\r\nclass DetailedArticle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n            source: this.props.location.state.source,         \r\n            bookmark: null,\r\n            show: false,\r\n            expand: false\r\n        }        \r\n    }\r\n    \r\n    componentWillMount()\r\n    {\r\n        if(localStorage.getItem('articles')===null)\r\n            {\r\n                this.setState({\r\n                    bookmark: false\r\n                });\r\n            }\r\n            else{            \r\n                var favs = JSON.parse(localStorage.getItem('articles'));\r\n                if(favs[this.props.location.state.article.id]!=null || favs[this.props.location.state.article.web_url])\r\n                {\r\n                    this.setState({\r\n                        bookmark: true\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        bookmark: false\r\n                    })\r\n                }\r\n            }\r\n    }\r\n    toggleShow() {\r\n        this.setState(\r\n            {\r\n                show: !this.state.show\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        let id;\r\n        if(this.props.location.state.article.uri)\r\n        {\r\n            id = this.props.location.state.article.uri.replace(/:/g, '');\r\n        }\r\n        else if(this.props.location.state.article.id)\r\n            id = this.props.location.state.article.id;\r\n        /*this.removeCommentBox = */commentBox('5112673779843072-proj',\r\n            {\r\n                createBoxUrl(boxId, pageLocation) {\r\n                    //const queryParams = qs.parse(pageLocation.search.replace('?', ''));\r\n                    //pageLocation.search = id;\r\n                    //pageLocation.hash = boxId;\r\n                    return id;\r\n                }\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        //this.removeCommentBox();\r\n    }    \r\n    sendToBookmark() {\r\n        var favs,id;\r\n        if(this.props.location.state.article.id)\r\n            id = this.props.location.state.article.id;\r\n        else if(this.props.location.state.article.web_url)\r\n            id = this.props.location.state.article.web_url\r\n        if (localStorage.getItem('articles') === null)\r\n            favs = {};\r\n        else\r\n            favs = JSON.parse(localStorage.getItem('articles'));\r\n        this.setState({ bookmark: !this.state.bookmark });\r\n        this.toggleShow();\r\n        if (!this.state.bookmark) {\r\n            favs[id] = this.props.location.state.article;\r\n        }\r\n        else {\r\n            delete favs[id];\r\n        }\r\n        localStorage.removeItem('articles');\r\n        localStorage.setItem('articles', JSON.stringify(favs));\r\n\r\n    }\r\n    largestImage(result)\r\n        {                    \r\n            console.log(result)\r\n            if(result.multimedia===null)\r\n            return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\";\r\n              \r\n          for(var i=0;i<result.multimedia.length;i++)\r\n          {\r\n            if(result.multimedia[i].width>=2000)\r\n              {\r\n              return result.multimedia[i].url;}\r\n          }               \r\n          return \"https://upload.wikimedia.org/wikipedia/commons/0/0e/Nytimes_hq.jpg\" ;\r\n        } \r\n\r\n\r\n    resizeCard()\r\n    {\r\n        this.setState({ expand: !this.state.expand});\r\n\r\n    }\r\n    render() {    \r\n\r\n        const article = this.props.location.state.article;\r\n        let page, message;\r\n        \r\n        if (this.props.location.state.source === \"guardian\") \r\n        {\r\n            message = article.webTitle;\r\n            if (this.state.bookmark) {\r\n                message = \"Saving - \" + message;\r\n            }\r\n            else {\r\n                message = \"Removing - \" + message;\r\n            }            \r\n            page = <Container style={{position: \"relative\"}}>     \r\n                                          \r\n                <Card>\r\n                    <Card.Title style={{ fontStyle: \"italic\"}}>{article.webTitle}</Card.Title>\r\n                    <Card.Text>\r\n                        <Row>\r\n                            <Col style={{ fontStyle: \"italic\", padding: \"1%\"}} xs={4} sm={8}>{article.webPublicationDate.slice(0,10)}</Col>                                                           \r\n                            <Col xs={6} sm={3}>\r\n                                <FacebookShareButton url={article.webUrl}><Tooltip title=\"Facebook\"  arrow><FacebookIcon round={true} size={32}></FacebookIcon></Tooltip></FacebookShareButton>\r\n                                <TwitterShareButton url={article.webUrl}><Tooltip title=\"Twitter\"  arrow><TwitterIcon round={true} size={32}></TwitterIcon></Tooltip></TwitterShareButton>\r\n                                <EmailShareButton url={article.webUrl}><Tooltip title=\"Email\"  arrow><EmailIcon round={true} size={32}></EmailIcon></Tooltip></EmailShareButton>\r\n                            </Col>\r\n                            <Col xs={1} sm={1}>\r\n                                <span id=\"bookmark_unclicked\" className={`bookmark ${this.state.bookmark===true ? \"hidden\" : \"\"}`} onClick={() => this.sendToBookmark()}><Bookmark color=\"red\" size={32}/></span>\r\n                                <span id=\"bookmark_clicked\" className={`bookmark ${this.state.bookmark===true ? \"\" : \"hidden\"}`} onClick={() => this.sendToBookmark()}><BookmarkFill color=\"red\" size={32}/></span>\r\n                                \r\n                                \r\n                            </Col>\r\n                        </Row>                                                                                                    \r\n                    </Card.Text>\r\n                    <Card.Img variant=\"top\" src={((empty) => {\r\n                            if (empty)\r\n                                return \"https://assets.guim.co.uk/images/eada8aa27c12fe2d5afa3a89d3fbae0d/fallback-logo.png\"\r\n                            else\r\n                                return article.blocks.main.elements[0].assets[article.blocks.main.elements[0].assets.length-1].file;\r\n                        })(article.blocks.main.elements[0].assets.length === 0)} />                                                                \r\n                        <Card.Text>\r\n                            <Row>\r\n                                <Col className={`expand ${this.state.expand===true ? \"\" : \"guardian-div\"}`}>\r\n                                    {article.blocks.body[0].bodyTextSummary}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col style={{textAlign: \"right\"}}> \r\n                                 <span onClick={() => this.resizeCard()} className={`arrow ${this.state.expand===true ? \"hidden\" : \"\"}`}><ChevronDown /></span>\r\n                                 \r\n                                 <ScrollUpButton ContainerClassName={`arrow ${this.state.expand===true ? \"\" : \"hidden\"}`} TransitionClassName=\"ScrollUpButton__Toggled\">   \r\n                                 <span onClick={() => this.resizeCard()} ><ChevronUp /></span>\r\n                                </ScrollUpButton>\r\n                                </Col>\r\n                            </Row>                                                        \r\n                        </Card.Text>                                            \r\n                </Card>                                \r\n            </Container>\r\n        }\r\n        else if(this.props.location.state.source === \"nytimes\") {\r\n            message = article.headline.main;\r\n            if (this.state.bookmark) {\r\n                message = \"Saving - \" + message;\r\n            }\r\n            else {\r\n                message = \"Removing - \" + message;\r\n            }                 \r\n            page = <Container style={{position: \"relative\"}}>                \r\n                \r\n                <Card>\r\n                    <Card.Title style={{ fontStyle: \"italic\"}}>{article.headline.main}</Card.Title>\r\n                    <Card.Text>\r\n                        <Row>\r\n                            <Col style={{ fontStyle: \"italic\"}} xs={3} sm={8}>{article.pub_date.slice(0,10)} </Col>                                                           \r\n                            <Col>\r\n                            <FacebookShareButton url={article.webUrl}><Tooltip title=\"Facebook\"  arrow><FacebookIcon round={true} size={32}></FacebookIcon></Tooltip></FacebookShareButton>\r\n                                <TwitterShareButton url={article.webUrl}><Tooltip title=\"Twitter\"  arrow><TwitterIcon round={true} size={32}></TwitterIcon></Tooltip></TwitterShareButton>\r\n                                <EmailShareButton url={article.webUrl}><Tooltip title=\"Email\"  arrow><EmailIcon round={true} size={32}></EmailIcon></Tooltip></EmailShareButton>   \r\n                            </Col>\r\n                            <Col sm={1}>\r\n                                <span id=\"bookmark_unclicked\" className={`bookmark ${this.state.bookmark===true ? \"hidden\" : \"\"}`} onClick={() => this.sendToBookmark()}><Bookmark color=\"red\" size={32}/></span>\r\n                                <span id=\"bookmark_clicked\" className={`bookmark ${this.state.bookmark===true ? \"\" : \"hidden\"}`} onClick={() => this.sendToBookmark()}><BookmarkFill color=\"red\" size={32}/></span>\r\n                            </Col>\r\n                        </Row>                                                                                  \r\n                    </Card.Text>\r\n                    <Card.Img variant=\"top\" src={this.largestImage(article)} />  \r\n                    <Card.Text className=\"card-details guardian-div\">\r\n                            <Row>\r\n                                <Col className={`expand ${this.state.expand===true ? \"\" : \"guardian-div\"}`}>\r\n                                    {article.abstract}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                <span onClick={() => this.resizeCard()} className={`arrow ${this.state.expand===true ? \"hidden\" : \"\"}`}><ChevronDown /></span>\r\n                                <ScrollUpButton ContainerClassName={`arrow ${this.state.expand===true ? \"\" : \"hidden\"}`} TransitionClassName=\"ScrollUpButton__Toggled\">   \r\n                                 <span onClick={() => this.resizeCard()} ><ChevronUp /></span>\r\n                                </ScrollUpButton>\r\n                                </Col>\r\n                            </Row>                                                        \r\n                        </Card.Text>                                                               \r\n                        <Card.Text>                                               \r\n                        </Card.Text>                                            \r\n                </Card>      \r\n            </Container>\r\n        }\r\n        return (\r\n            <>\r\n                <Container style={{postion:\"relative\"}} >                \r\n                    <Toast\r\n                            className = \"toast\"\r\n                            style={{\r\n                                position: 'absolute',                            \r\n                                top: \"5%\",                            \r\n                                zIndex : 2                                                                \r\n                            }}\r\n                            onClose={() => this.toggleShow()} show={this.state.show} delay={3000} autohide>\r\n                            <Toast.Header>{message}</Toast.Header>\r\n                    </Toast>                \r\n                    {page}                \r\n                    <div className=\"commentbox\" style={{position: \"relative\"}} />\r\n                </Container>\r\n                \r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailedArticle;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ErrorFile from './components/ErrorFile'\r\nimport NavBar from './NavBar';\r\n\r\nimport BookmarkedArticles from './components/BookmarkedArticles';\r\nimport Home from './components/Home';\r\n\r\nimport SearchResults from './components/SearchResults';\r\nimport DetailedArticle from './components/DetailedArticle';\r\nclass App extends Component{\r\n  \r\n  render(){\r\n      \r\n  return (\r\n    \r\n    <BrowserRouter>\r\n          <div className=\"App\">                              \r\n          <NavBar  /> \r\n            <div id='page-body'>           \r\n              <Switch>\r\n                  <Route path={`/article`} component={DetailedArticle} exact/>}/>                                 \r\n                  <Route path=\"/bookmarked\" component={BookmarkedArticles} exact/>  \r\n                  <Route path=\"/search/:query\" component={SearchResults} exact />                      \r\n                  <Route path=\"/:source/:field\"  component={Home} exact />    \r\n                  <Route path='/' component={ErrorFile} />\r\n              </Switch>\r\n                                             \r\n            </div>                                                                                                               \r\n          </div>\r\n    </BrowserRouter>    \r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}